{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { Fragment as _Fragment, jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Me() {\n  _s();\n  const [data, setData] = useState(null);\n  useEffect(() => {\n    const token = localStorage.getItem('token'); // Отримуємо токен з localStorage\n    console.log(token);\n    if (token) {\n      fetch('/auth/me', {\n        method: 'GET',\n        headers: {\n          Authorization: `Bearer ${token}`,\n          // Передаємо токен в заголовках\n          'Content-Type': 'application/json'\n        }\n      }).then(res => {\n        if (!res.ok) {\n          throw new Error('Failed to fetch user data');\n        }\n        return res.json();\n      }).then(res => setData(res)) // Зберігаємо отримані дані\n      .catch(err => {\n        console.error('Error fetching data:', err);\n        setData('Помилка при отриманні даних');\n      });\n    } else {\n      setData('Токен відсутній');\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: data.fullName\n  }, void 0, false);\n}\n_s(Me, \"fQZRxy/+nAZ7NLS1X4dVhrlp8Go=\");\n_c = Me;\nvar _c;\n$RefreshReg$(_c, \"Me\");","map":{"version":3,"names":["useEffect","useState","Fragment","_Fragment","jsxDEV","_jsxDEV","Me","_s","data","setData","token","localStorage","getItem","console","log","fetch","method","headers","Authorization","then","res","ok","Error","json","catch","err","error","children","fullName","_c","$RefreshReg$"],"sources":["D:/www/PerfectRuns/frontend/src/links/me.jsx"],"sourcesContent":["import { useEffect, useState } from 'react'\r\n\r\nexport default function Me() {\r\n    const [data, setData] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const token = localStorage.getItem('token'); // Отримуємо токен з localStorage\r\n        console.log(token)\r\n        if (token) {\r\n            fetch('/auth/me', {\r\n                method: 'GET',\r\n                headers: {\r\n                    Authorization: `Bearer ${token}`, // Передаємо токен в заголовках\r\n                    'Content-Type': 'application/json',\r\n                },\r\n            })\r\n                .then((res) => {\r\n                    if (!res.ok) {\r\n                        throw new Error('Failed to fetch user data');\r\n                    }\r\n                    return res.json();\r\n                })\r\n                .then((res) => setData(res)) // Зберігаємо отримані дані\r\n                .catch((err) => {\r\n                    console.error('Error fetching data:', err);\r\n                    setData('Помилка при отриманні даних');\r\n                });\r\n        } else {\r\n            setData('Токен відсутній');\r\n        }\r\n    }, []);\r\n    return (\r\n        <>{data.fullName}\r\n        </>\r\n    )\r\n}"],"mappings":";AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAA,SAAAC,QAAA,IAAAC,SAAA,EAAAC,MAAA,IAAAC,OAAA;AAE3C,eAAe,SAASC,EAAEA,CAAA,EAAG;EAAAC,EAAA;EACzB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAEtCD,SAAS,CAAC,MAAM;IACZ,MAAMU,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC;IAC7CC,OAAO,CAACC,GAAG,CAACJ,KAAK,CAAC;IAClB,IAAIA,KAAK,EAAE;MACPK,KAAK,CAAC,UAAU,EAAE;QACdC,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;UACLC,aAAa,EAAE,UAAUR,KAAK,EAAE;UAAE;UAClC,cAAc,EAAE;QACpB;MACJ,CAAC,CAAC,CACGS,IAAI,CAAEC,GAAG,IAAK;QACX,IAAI,CAACA,GAAG,CAACC,EAAE,EAAE;UACT,MAAM,IAAIC,KAAK,CAAC,2BAA2B,CAAC;QAChD;QACA,OAAOF,GAAG,CAACG,IAAI,CAAC,CAAC;MACrB,CAAC,CAAC,CACDJ,IAAI,CAAEC,GAAG,IAAKX,OAAO,CAACW,GAAG,CAAC,CAAC,CAAC;MAAA,CAC5BI,KAAK,CAAEC,GAAG,IAAK;QACZZ,OAAO,CAACa,KAAK,CAAC,sBAAsB,EAAED,GAAG,CAAC;QAC1ChB,OAAO,CAAC,6BAA6B,CAAC;MAC1C,CAAC,CAAC;IACV,CAAC,MAAM;MACHA,OAAO,CAAC,iBAAiB,CAAC;IAC9B;EACJ,CAAC,EAAE,EAAE,CAAC;EACN,oBACIJ,OAAA,CAAAF,SAAA;IAAAwB,QAAA,EAAGnB,IAAI,CAACoB;EAAQ,gBACd,CAAC;AAEX;AAACrB,EAAA,CAjCuBD,EAAE;AAAAuB,EAAA,GAAFvB,EAAE;AAAA,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}