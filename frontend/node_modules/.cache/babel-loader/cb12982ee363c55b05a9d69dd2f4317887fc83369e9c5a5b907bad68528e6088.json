{"ast":null,"code":"var _jsxFileName = \"D:\\\\www\\\\PerfectRuns\\\\frontend\\\\src\\\\links\\\\register.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Register() {\n  _s();\n  const [email, setEmail] = useState(null);\n  const [nickName, setNickName] = useState(null);\n  const [password, setPassword] = useState(null);\n  const [avatar, setAvatar] = useState(null);\n  const [responseData, setResponseData] = useState(null);\n  const handleSubmit = async event => {\n    event.preventDefault(); // зупинити стандартну поведінку форми\n    const res = await fetch(\"http://localhost:3001/auth/register\", {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email: email,\n        fullName: nickName,\n        password: password,\n        avatarUrl: avatar\n      })\n    });\n    const content = await res.json();\n    console.log(content);\n    setResponseData(content);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"\\u041D\\u0456\\u043A\\u043D\\u0435\\u0439\\u043C\",\n        type: \"text\",\n        value: nickName,\n        onChange: e => setNickName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Email\",\n        type: \"email\",\n        value: email,\n        onChange: e => setEmail(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C\",\n        type: \"password\",\n        value: password,\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"\\u041F\\u043E\\u0441\\u0438\\u043B\\u0430\\u043D\\u043D\\u044F \\u043D\\u0430 \\u0430\\u0432\\u0430\\u0442\\u0430\\u0440\",\n        type: \"text\",\n        value: avatar,\n        onChange: e => setAvatar(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), responseData && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Response Data:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: JSON.stringify(responseData, null, 2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n}\n_s(Register, \"uGiw/SGcbMt9TtDPwXB90PwAFHw=\");\n_c = Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["useEffect","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Register","_s","email","setEmail","nickName","setNickName","password","setPassword","avatar","setAvatar","responseData","setResponseData","handleSubmit","event","preventDefault","res","fetch","method","headers","body","JSON","stringify","fullName","avatarUrl","content","json","console","log","children","onSubmit","placeholder","type","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/www/PerfectRuns/frontend/src/links/register.jsx"],"sourcesContent":["\r\nimport { useEffect, useState } from 'react'\r\n\r\nexport default function Register() {\r\n\r\n    const [email, setEmail] = useState(null)\r\n    const [nickName, setNickName] = useState(null)\r\n    const [password, setPassword] = useState(null)\r\n    const [avatar, setAvatar] = useState(null)\r\n    const [responseData, setResponseData] = useState(null)\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault(); // зупинити стандартну поведінку форми\r\n        const res = await fetch(\"http://localhost:3001/auth/register\", {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n                email: email,\r\n                fullName: nickName,\r\n                password: password,\r\n                avatarUrl: avatar,\r\n            })\r\n        });\r\n        const content = await res.json();\r\n        console.log(content);\r\n        setResponseData(content)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <form onSubmit={handleSubmit}>\r\n                <input placeholder='Нікнейм' type=\"text\" value={nickName} onChange={(e) => setNickName(e.target.value)} />\r\n                <input placeholder='Email' type=\"email\" value={email} onChange={(e) => setEmail(e.target.value)} />\r\n                <input placeholder='Пароль' type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} />\r\n                <input placeholder='Посилання на аватар' type=\"text\" value={avatar} onChange={(e) => setAvatar(e.target.value)} />\r\n\r\n                <input type=\"submit\" value=\"Send\" />\r\n            </form>\r\n            {responseData && (\r\n                <div>\r\n                    <h2>Response Data:</h2>\r\n                    <pre>{JSON.stringify(responseData, null, 2)}</pre>\r\n                </div>\r\n            )}\r\n        </>\r\n    )\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}