{"ast":null,"code":"var _jsxFileName = \"D:\\\\www\\\\PerfectRuns\\\\frontend\\\\src\\\\links\\\\patchPost.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PatchPost() {\n  _s();\n  const [postId, setPostId] = useState(\"\");\n  const [formData, setFormData] = useState({\n    title: \"\",\n    text: \"\",\n    imageUrl: \"\",\n    tags: \"\"\n  });\n  const [message, setMessage] = useState(\"\");\n\n  // Оновленя даних форми\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n\n  // Надсилання запиту\n  const handleUpdate = async e => {\n    e.preventDefault();\n    const token = localStorage.getItem(\"token\");\n    if (!postId) {\n      setMessage(\"Введіть ID поста\");\n      return;\n    }\n    try {\n      const response = await fetch(`/posts/patch/${postId}`, {\n        method: \"PATCH\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify({\n          ...formData,\n          tags: formData.tags.split(\",\").map(tag => tag.trim()) // Розбити тег-рядок у масив\n        })\n      });\n      const result = await response.json();\n      if (response.ok) {\n        setMessage(\"Пост успішно оновлено!\");\n      } else {\n        setMessage(result.message || \"Помилка при оновленні поста\");\n      }\n    } catch (error) {\n      console.error(\"Помилка при оновленні поста:\", error);\n      setMessage(\"Сталася помилка\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"content\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\u0420\\u0435\\u0434\\u0430\\u0433\\u0443\\u0432\\u0430\\u0442\\u0438 \\u043F\\u043E\\u0441\\u0442\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleUpdate,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0456\\u0442\\u044C ID \\u043F\\u043E\\u0441\\u0442\\u0430\",\n        value: postId,\n        onChange: e => setPostId(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"title\",\n        placeholder: \"\\u0417\\u0430\\u0433\\u043E\\u043B\\u043E\\u0432\\u043E\\u043A\",\n        value: formData.title,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        name: \"text\",\n        placeholder: \"\\u0422\\u0435\\u043A\\u0441\\u0442 \\u043F\\u043E\\u0441\\u0442\\u0430\",\n        value: formData.text,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"imageUrl\",\n        placeholder: \"\\u041F\\u043E\\u0441\\u0438\\u043B\\u0430\\u043D\\u043D\\u044F \\u043D\\u0430 \\u0437\\u043E\\u0431\\u0440\\u0430\\u0436\\u0435\\u043D\\u043D\\u044F\",\n        value: formData.imageUrl,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"tags\",\n        placeholder: \"\\u0422\\u0435\\u0433\\u0438 (\\u0447\\u0435\\u0440\\u0435\\u0437 \\u043A\\u043E\\u043C\\u0443)\",\n        value: formData.tags,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"\\u041E\\u043D\\u043E\\u0432\\u0438\\u0442\\u0438\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n}\n_s(PatchPost, \"gtwMuLg/gOTuOq4d/yJIEKKMSoE=\");\n_c = PatchPost;\nvar _c;\n$RefreshReg$(_c, \"PatchPost\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","PatchPost","_s","postId","setPostId","formData","setFormData","title","text","imageUrl","tags","message","setMessage","handleChange","e","name","value","target","prev","handleUpdate","preventDefault","token","localStorage","getItem","response","fetch","method","headers","Authorization","body","JSON","stringify","split","map","tag","trim","result","json","ok","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","onChange","_c","$RefreshReg$"],"sources":["D:/www/PerfectRuns/frontend/src/links/patchPost.jsx"],"sourcesContent":["import { useState } from \"react\";\r\n\r\nexport default function PatchPost() {\r\n    const [postId, setPostId] = useState(\"\"); \r\n    const [formData, setFormData] = useState({\r\n        title: \"\",\r\n        text: \"\",\r\n        imageUrl: \"\",\r\n        tags: \"\",\r\n    });\r\n    const [message, setMessage] = useState(\"\");\r\n\r\n    // Оновленя даних форми\r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setFormData((prev) => ({ ...prev, [name]: value }));\r\n    };\r\n\r\n    // Надсилання запиту\r\n    const handleUpdate = async (e) => {\r\n        e.preventDefault();\r\n        const token = localStorage.getItem(\"token\");\r\n\r\n        if (!postId) {\r\n            setMessage(\"Введіть ID поста\");\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const response = await fetch(`/posts/patch/${postId}`, {\r\n                method: \"PATCH\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    Authorization: `Bearer ${token}`,\r\n                },\r\n                body: JSON.stringify({\r\n                    ...formData,\r\n                    tags: formData.tags.split(\",\").map((tag) => tag.trim()), // Розбити тег-рядок у масив\r\n                }),\r\n            });\r\n\r\n            const result = await response.json();\r\n            if (response.ok) {\r\n                setMessage(\"Пост успішно оновлено!\");\r\n            } else {\r\n                setMessage(result.message || \"Помилка при оновленні поста\");\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Помилка при оновленні поста:\", error);\r\n            setMessage(\"Сталася помилка\");\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"content\">\r\n            <h1>Редагувати пост</h1>\r\n            <form onSubmit={handleUpdate}>\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Введіть ID поста\"\r\n                    value={postId}\r\n                    onChange={(e) => setPostId(e.target.value)}\r\n                />\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"title\"\r\n                    placeholder=\"Заголовок\"\r\n                    value={formData.title}\r\n                    onChange={handleChange}\r\n                />\r\n                <textarea\r\n                    name=\"text\"\r\n                    placeholder=\"Текст поста\"\r\n                    value={formData.text}\r\n                    onChange={handleChange}\r\n                ></textarea>\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"imageUrl\"\r\n                    placeholder=\"Посилання на зображення\"\r\n                    value={formData.imageUrl}\r\n                    onChange={handleChange}\r\n                />\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"tags\"\r\n                    placeholder=\"Теги (через кому)\"\r\n                    value={formData.tags}\r\n                    onChange={handleChange}\r\n                />\r\n                <button type=\"submit\">Оновити</button>\r\n            </form>\r\n            {message && <p>{message}</p>}\r\n        </div>\r\n    );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}