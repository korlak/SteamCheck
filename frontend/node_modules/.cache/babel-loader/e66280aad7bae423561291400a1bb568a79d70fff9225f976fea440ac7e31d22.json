{"ast":null,"code":"var _jsxFileName = \"D:\\\\www\\\\PerfectRuns\\\\frontend\\\\src\\\\links\\\\login.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Login() {\n  _s();\n  const [email, setEmail] = useState(null);\n  const [nickName, setNickName] = useState(null);\n  const [password, setPassword] = useState(null);\n  const [avatar, setAvatar] = useState(null);\n  const handleSubmit = async event => {\n    const res = await fetch(\"http://localhost:3001/auth/register\", {\n      method: 'POST',\n      headers: {\n        email: email,\n        fullName: nickName,\n        password: password,\n        avatarUrl: avatar\n      },\n      body: JSON.stringify({\n        a: 1,\n        b: 'Textual content'\n      })\n    });\n    const content = await res.json();\n    console.log(content);\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: email,\n      onChange: e => setEmail(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: password,\n      onChange: e => setPassword(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: nickName,\n      onChange: e => setNickName(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: avatar,\n      onChange: e => setAvatar(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"submit\",\n      value: \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n}\n_s(Login, \"sx4CMqGCu4L9BJTO0Lb/TvJ/kYE=\");\n_c = Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["useEffect","useState","axios","jsxDEV","_jsxDEV","Login","_s","email","setEmail","nickName","setNickName","password","setPassword","avatar","setAvatar","handleSubmit","event","res","fetch","method","headers","fullName","avatarUrl","body","JSON","stringify","a","b","content","json","console","log","onSubmit","children","type","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/www/PerfectRuns/frontend/src/links/login.jsx"],"sourcesContent":["import { useEffect, useState } from 'react'\r\nimport axios from \"axios\";\r\n\r\nexport default function Login() {\r\n\r\n    const [email, setEmail] = useState(null)\r\n    const [nickName, setNickName] = useState(null)\r\n    const [password, setPassword] = useState(null)\r\n    const [avatar, setAvatar] = useState(null)\r\n\r\n    const handleSubmit = async (event) => {\r\n        const res = await fetch(\"http://localhost:3001/auth/register\", {\r\n            method: 'POST',\r\n            headers: {\r\n                email: email,\r\n                fullName: nickName,\r\n                password: password,\r\n                avatarUrl: avatar,\r\n            },\r\n            body: JSON.stringify({ a: 1, b: 'Textual content' })\r\n        });\r\n        const content = await res.json();\r\n        console.log(content)\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input type=\"text\" value={email} onChange={(e) => setEmail(e.target.value)} />\r\n            <input type=\"text\" value={password} onChange={(e) => setPassword(e.target.value)} />\r\n            <input type=\"text\" value={nickName} onChange={(e) => setNickName(e.target.value)} />\r\n            <input type=\"text\" value={avatar} onChange={(e) => setAvatar(e.target.value)} />\r\n\r\n            <input type=\"submit\" value=\"Send\" />\r\n        </form>\r\n    )\r\n}"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,eAAe,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EAE5B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACQ,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAACU,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAACY,MAAM,EAAEC,SAAS,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAE1C,MAAMc,YAAY,GAAG,MAAOC,KAAK,IAAK;IAClC,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,qCAAqC,EAAE;MAC3DC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACLb,KAAK,EAAEA,KAAK;QACZc,QAAQ,EAAEZ,QAAQ;QAClBE,QAAQ,EAAEA,QAAQ;QAClBW,SAAS,EAAET;MACf,CAAC;MACDU,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEC,CAAC,EAAE,CAAC;QAAEC,CAAC,EAAE;MAAkB,CAAC;IACvD,CAAC,CAAC;IACF,MAAMC,OAAO,GAAG,MAAMX,GAAG,CAACY,IAAI,CAAC,CAAC;IAChCC,OAAO,CAACC,GAAG,CAACH,OAAO,CAAC;EACxB,CAAC;EAED,oBACIxB,OAAA;IAAM4B,QAAQ,EAAEjB,YAAa;IAAAkB,QAAA,gBACzB7B,OAAA;MAAO8B,IAAI,EAAC,MAAM;MAACC,KAAK,EAAE5B,KAAM;MAAC6B,QAAQ,EAAGC,CAAC,IAAK7B,QAAQ,CAAC6B,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC9EtC,OAAA;MAAO8B,IAAI,EAAC,MAAM;MAACC,KAAK,EAAExB,QAAS;MAACyB,QAAQ,EAAGC,CAAC,IAAKzB,WAAW,CAACyB,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACpFtC,OAAA;MAAO8B,IAAI,EAAC,MAAM;MAACC,KAAK,EAAE1B,QAAS;MAAC2B,QAAQ,EAAGC,CAAC,IAAK3B,WAAW,CAAC2B,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACpFtC,OAAA;MAAO8B,IAAI,EAAC,MAAM;MAACC,KAAK,EAAEtB,MAAO;MAACuB,QAAQ,EAAGC,CAAC,IAAKvB,SAAS,CAACuB,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAEhFtC,OAAA;MAAO8B,IAAI,EAAC,QAAQ;MAACC,KAAK,EAAC;IAAM;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClC,CAAC;AAEf;AAACpC,EAAA,CAhCuBD,KAAK;AAAAsC,EAAA,GAALtC,KAAK;AAAA,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}